<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.pointinfo.dao.PointInfoDao">
    
	<sql id="pointInfoColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.uid AS "xhUser.id",
		(select u.username from xh_user u where u.id = a.uid) AS "xhUser.username",
		a.u_name AS "uName",
		a.u_phone AS "uPhone",
		a.p_name AS "pName",
		a.p_point AS "pPoint"
	</sql>
	
	<sql id="pointInfoJoins">
	</sql>
	
    
	<select id="get" resultType="PointInfo" >
		SELECT 
			<include refid="pointInfoColumns"/>
		FROM point_info a
		<include refid="pointInfoJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="PointInfo" >
		SELECT 
			<include refid="pointInfoColumns"/>
		FROM point_info a
		<include refid="pointInfoJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="PointInfo" >
		SELECT 
			<include refid="pointInfoColumns"/>
		FROM point_info a
		<include refid="pointInfoJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO point_info(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			uid,
			u_name,
			u_phone,
			p_name,
			p_point
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{xhUser.id},
			#{uName},
			#{uPhone},
			#{pName},
			#{pPoint}
		)
	</insert>
	
	<update id="update">
		UPDATE point_info SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			uid = #{xhUser.id},
			u_name = #{uName},
			u_phone = #{uPhone},
			p_name = #{pName},
			p_point = #{pPoint}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM point_info
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE point_info SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="PointInfo" statementType="STATEMENT">
		select * FROM point_info  where ${propertyName} = '${value}'
	</select>
	
</mapper>